apiVersion: entity.humanitec.io/v1b1
kind: Definition
metadata:
  id: aws-iam-example-s3-concrete
entity:
  criteria:
  - app_id: aws-iam-example
    class: concrete
  driver_account: ${resources['config.default#aws-account'].account}
  driver_inputs:
    values:
      credentials_config:
        environment:
          AWS_ACCESS_KEY_ID: "AccessKeyId"
          AWS_SECRET_ACCESS_KEY: "SecretAccessKey"
          AWS_SESSION_TOKEN: "SessionToken"
      runner_mode: managed
      variables:
        region: ${resources['config.default#aws-account'].outputs.region}
        res_id: ${context.res.id}
        env_id: ${context.env.id}

      script: |
        variable "region" {}
        variable "res_id" {}
        variable "env_id" {}

        locals {
          # res_id will have the form: modules.<workload_name>
          id = reverse(split(".", var.res_id))[0]
        }

        terraform {
          required_providers {
            aws = {
              source = "hashicorp/aws"
            }
          }
        }

        provider "aws" {
          region = var.region
        }

        resource "aws_s3_bucket" "concrete" {
          bucket_prefix = local.id

          tags = {
            Name        = local.id
            Environment = "$\{var.env_id}"
          }
        }

        output "arn" {
          value = aws_s3_bucket.concrete.arn
        }
        output "bucket" {
          value = aws_s3_bucket.concrete.id
        }
        output "region" {
          value = aws_s3_bucket.concrete.region
        }

  driver_type: humanitec/terraform
  name: aws-iam-example-s3-concrete
  type: s3